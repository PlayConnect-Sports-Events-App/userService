# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: User Service

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }} # Project ID from your account
  SERVICE: user-service # Google Cloud Run service name
  REGION: europe-west4

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  git_guardian:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    continue-on-error: true # Continue to the next job even if this one fails
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.25.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run Tests
        run: mvn test -Dspring.profiles.active=test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package

  # Define the Docker publish job
  docker-publish:
    needs: build # This job runs after the build job completes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev
      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 \
            --tag europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/my-docker-repo/user-service:latest \
            --tag europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/my-docker-repo/user-service:${{ github.sha }} \
            --push \
            .
      - name: List Docker Images
        run: docker images

  deploy:
    needs: docker-publish
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image europe-west4-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/my-docker-repo/user-service:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --port 8082 \
            --allow-unauthenticated
      - name: List Cloud Run Services
        run: gcloud run services list --platform managed --region ${{ env.REGION }}
      - name: Get Cloud Run Logs
        run: |
          gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=${{ env.SERVICE }}" --limit 
